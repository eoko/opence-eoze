<?php

namespace eoze\Exception;

use UnsupportedOperationException;

/**
 * Exception that is thrown when some code or functionnality has not been
 * implemented yet.
 * 
 * @license http://opensource.org/licenses/gpl-license.php GNU Public License
 * @author Ã‰ric Ortega <eric@planysphere.fr>
 * @since 30 oct. 2011
 */
class NotImplementedYetException extends UnsupportedOperationException {
	
	/**
	 * Creates a new {@link NotImplementedYetException}. If no $debugMessage
	 * is passed, then one will be autogenerated that will be of the form:
	 * 
	 * For a method:
	 * Not implemented yet: Namespace\ClassName::methodName()
	 * 
	 * For a static function:
	 * Not implemented yet: Namespace\function()
	 * 
	 * @param type $debugMessage
	 * @param type $previous 
	 */
	public function __construct($debugMessage = null, $previous = null) {
		if ($debugMessage === null) {
			$trace = $this->getTrace();
			if ($trace && count($trace)) {
				$debugMessage = 'Not implemented yet';
				$call = array_shift($trace);
				$class = isset($call['class']) ? "$call[class]::" : null;
				$method = isset($call['function']) ? "$call[function]()" : null;
				if ($class || $method) {
					$debugMessage .= ": $class$method";
				}
			} else {
				$debugMessage = '';
			}
		}
		parent::__construct($debugMessage, $previous);
	}
}
